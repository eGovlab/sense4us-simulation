'use strict';

var objectHelper = require('object-helper');

function generateHexColor() {
    var n = Math.round(Math.random() * 255).toString(16); 
    if(n.length === 1) {
        n = '0' + n;
    }
    
    return n;
}

function generateColor() {
    return '#' + generateHexColor() + generateHexColor() + generateHexColor();
}

function select(data) {
    var selectedNodes = objectHelper.filter.call(
        data.nodeGui,
        function(node) {
            return node.clicked;
        }
    );
    
    selectedNodes = objectHelper.map.call(
        selectedNodes,
        function(node) {
            if(node.msSinceClicked !== undefined && node.msSinceClicked + 300 > Date.now()) {
                data.selected = node;
                node.selected = true;
                delete node.msSinceClicked;
                return node;
            }

            if(!data.didDrag) {
                node.linegraph        = data.settings.linegraph ? !node.linegraph : false;
                data.refreshLinegraph = true;

                if(!node.color) {
                    node.color = generateColor();
                }
            }

            node.msSinceClicked = Date.now();
            return node;
        }
    );

    var selectedLinks = objectHelper.filter.call(
        data.links,
        function(link) {
            return link.clicked;
        }
    );

    selectedLinks = objectHelper.map.call(
        selectedLinks,
        function(link) {
            if(link.msSinceClicked !== undefined && link.msSinceClicked + 300 > Date.now()) {
                data.selected = link;
                link.selected = true;
                delete link.msSinceClicked;
                return link;
            }

            link.msSinceClicked = Date.now();
            return link;
        }
    );

    data.nodeGui = objectHelper.merge.call(data.nodeGui, selectedNodes);
    data.links   = objectHelper.merge.call(data.links,   selectedLinks);

    return data;
}

module.exports = select;