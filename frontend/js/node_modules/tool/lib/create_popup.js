'use strict';

var newUI = require('new_ui');

var Element = newUI.Element,
    Button  = newUI.Button;

function createPopup(config) {
    if(!config || typeof config !== 'object') {
        return false;
    }

    if((!config.description || typeof config.description !== 'string')
    && (!config.buttons || !config.buttons.forEach)) {
        return false;
    }

    var container = new Element('div');

    container.root.style.display  = 'flex';

    container.root.style.position = 'absolute';
    container.root.style.top      = '0px';
    container.root.style.left     = '0px';

    container.root.style['z-index'] = '4';

    container.setWidth('100%');
    container.setHeight('100%');

    container.setBackground('rgba(0,0,0,0.4)');

    var popup = new Element('div');
    popup.setBackground('#fafafa');

    if(config.header) {
        var header = new Element('div');
        header.setLabel(config.header);

        header.root.style.padding = '8px';
        header.setBackground('#cacaca');

        header.root.style['border-top-left-radius']  = '4px';
        header.root.style['border-top-right-radius'] = '4px';

        header.root.style['border-bottom'] = '1px solid #bababa';

        header.root.style['text-align'] = 'center';
        header.root.style.color = '#404040';

        popup.appendChild(header);
    }

    var body = new Element('div');

    /*var shadow = 'inset 0px 0px 25px -5px rgba(144,144,144,1)';
    body.root.style['-webkit-box-shadow'] = shadow;
    body.root.style['-moz-box-shadow']    = shadow;
    body.root.style['box-shadow']         = shadow;*/
    
    popup.root.style['border-top-left-radius']  = '4px';
    popup.root.style['border-top-right-radius'] = '4px';
    //body.root.style.padding                    = '8px 16px';
    body.setWidth('320px');

    body.root.style.display           = 'flex';
    body.root.style['align-items']    = 'stretch';
    body.root.style['flex-direction'] = 'column';

    popup.root.style.margin = 'auto';

    container.appendChild(popup);

    var content         = new Element('div');
    var buttonContainer = new Element('div');

    if(config.description) {
        content.setLabel(config.description);
        content.root.style.padding       = '14px';
        content.root.style.margin        = 'auto';
        content.root.style['text-align'] = 'center';
    }

    content.root.style.display                   = 'flex';
    buttonContainer.root.style.display           = 'flex';
    buttonContainer.root.style['align-items']    = 'stretch';
    buttonContainer.root.style['flex-direction'] = 'row';

    if(typeof config.buttons === 'function') {
        config.buttons = [config.buttons];
    }

    config.buttons.forEach(function(buttonData) {
        if(!buttonData.callback) {
            return;
        }

        if(!buttonData.label) {
            buttonData.label = '';
        }

        var button = new Button();
        button.setLabel(buttonData.label)
        button.click(function() {
            buttonData.callback(container);
        });

        if(buttonData.background) {
            button.setBackground(buttonData.background);
        }

        if(buttonData.color) {
            button.root.style.color = buttonData.color;
        }

        button.root.style.display          = 'flex';
        button.label.root.style.margin     = 'auto';

        button.root.style.padding          = '6px 12px';

        button.root.style.margin           = '4px 0px';
        button.root.style['margin-right']  = '4px';
        button.root.style['border-radius'] = '4px';

        button.root.style['flex-grow']    = '1';
        button.root.style['text-align']   = 'center';

        buttonContainer.appendChild(button);
        buttonData.button = button;
    });

    config.buttons[0].button.root.style['margin-left'] = '4px';

    body.appendChild(content);
    body.appendChild(buttonContainer);

    popup.appendChild(body);

    return container;
}

module.exports = createPopup;