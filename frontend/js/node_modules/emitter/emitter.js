'use strict';

function Emitter() {
    if(!this instanceof Emitter) {
        throw new Error('Emitter need to be called as a constructor.');
    }

    this.listeners = {};
}

Emitter.prototype = {
    addListener: function(alias, callback) {
        if(!this.listeners[alias]) {
            this.listeners[alias] = [];
        }

        this.listeners[alias].push(callback);

        return this;
    },

    removeListener: function(alias, callback) {
        if(!this.listeners[alias]) {
            return this;
        }

        var index = this.listeners[alias].indexOf(callback);
        if(index !== -1) {
            this.listeners[alias].splice(index, 1);
        }

        return this;
    },

    on: function(alias, callback) {
        return this.addListener(alias, callback);
    },

    once: function(alias, callback) {
        var that = this;
        return this.addListener(alias, function() {
            var args = Array.from(arguments);
            that.removeListener(alias, callback);

            callback.apply(args);
        });
    },

    emit: function(alias) {
        var args  = Array.from(arguments);
        var alias = args[0];
        args      = args.splice(1, args.length - 1);

        var that = this;
        setTimeout(function() {
            if(!that.listeners[alias]) {
                return;
            }

            that.listeners[alias].forEach(function(listener) {
                listener.apply(null, args);
            });
        }, 0);

        return this;
    }
};

module.exports = Emitter;