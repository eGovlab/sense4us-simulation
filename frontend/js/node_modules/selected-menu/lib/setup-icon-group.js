'use strict';

var NewUI  = require('new_ui');
var Colors = NewUI.Colors;

function getIconGroup(menuItem) {
    var iconGroup = menuItem.addIconGroup();

    iconGroup.clicks = [];
    var that = this;
    NewUI.Button.prototype.click.call(iconGroup, function(evt) {
        var clickedIcon = evt.target.clickedIcon;
        if(!clickedIcon) {
            return;
        }

        if(iconGroup.changeObject) {
            if(iconGroup.lastActive) {
                var lastRoot = iconGroup.lastActive.image.root;
                lastRoot.style.border = 'none';
            }

            iconGroup.lastActive = clickedIcon;
            clickedIcon.image.root.style.border = '4px solid ' + Colors.activeAvatar;

            iconGroup.changeObject[iconGroup.changeProperty] = clickedIcon.currentImage.src;
            that.emit(
                'dataModified',
                dropdown.changeObject,
                dropdown.changeProperty,
                clickedIcon.currentImage.src
            );
            //loadedModel.emit('refresh');
        }
    });

    return iconGroup;
}

function setupIconGroup(menuItem, url, row, data, gui) {
    var iconGroup = getIconGroup.call(this, menuItem);

    iconGroup.changeProperty = row.property;
    iconGroup.changeObject   = gui;

    iconGroup.setLabel(row.property);

    if(url.charAt(url.length - 1) !== '/') {
        url += '/';
    }

    if(row.groups[data.role]) {
        row.groups[data.role].forEach(function(img) {
            var btn = iconGroup.addIcon(url + img.src);
            btn.root.clickedIcon       = btn;
            btn.image.root.clickedIcon = btn;

            btn.currentImage = img;

            btn.image.root.style.border = 'none';
            btn.image.root.style['border-radius'] = '50%';

            if(gui[row.property] === img.src) {
                btn.image.root.style.border = '4px solid ' + Colors.activeAvatar;
                iconGroup.lastActive = btn;
            }
        });
    }

    if(row.showCondition && !row.showCondition(item)) {
        iconGroup.hide();
    } else {
        iconGroup.show();
    }

    return iconGroup;
}

module.exports = setupIconGroup;